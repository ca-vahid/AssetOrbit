name: Deploy Front-End to Azure Static Web Apps – assetorbit-frontend

on:
  push:
    branches: [main]
    paths:
      - 'packages/frontend/**'
      - '.github/workflows/main_assetorbit-frontend.yml'
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - uses: actions/checkout@v4

      # 2. Set up Node.js (same version as back-end for consistency)
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: packages/frontend/package-lock.json

      # 3. Install dependencies & build Vite app
      - name: Install and build front-end
        working-directory: packages/frontend
        run: |
          npm ci --ignore-scripts
          npm run build

      # 4. Deploy to Azure Static Web Apps
      - name: Deploy to Azure Static Web Apps
        id: swa
        uses: Azure/static-web-apps-deploy@v2
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_TOKEN }}
          # app_location is the root of the SPA source (for SWA env var substitution)
          app_location: "packages/frontend"
          output_location: "dist"
        env:
          # Build-time environment variables injected into Vite via import.meta.env
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
          VITE_AZURE_AD_CLIENT_ID: ${{ secrets.VITE_AZURE_AD_CLIENT_ID }}
          VITE_AZURE_AD_TENANT_ID: ${{ secrets.VITE_AZURE_AD_TENANT_ID }}
          # Optional – override if you prefer to build it from tenant id
          VITE_AZURE_AD_AUTHORITY: ${{ secrets.VITE_AZURE_AD_AUTHORITY }}
          VITE_AZURE_AD_SCOPE: ${{ secrets.VITE_AZURE_AD_SCOPE }}

    # Expose the deployed SWA URL in the summary (nice to have)
    outputs:
      swa-url: ${{ steps.swa.outputs.static_web_app_url }} 
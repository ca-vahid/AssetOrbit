# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - assetorbit-api

on:
  push:
    branches: [main]
    paths:
      - 'packages/backend/**'
      - 'packages/shared/**'
      - 'package.json'
      - '.github/workflows/main_assetorbit-api.yml'
  workflow_dispatch:

env:
  AZURE_WEBAPP_PACKAGE_PATH: 'packages/backend'
  NODE_VERSION: '20.x'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install root dependencies & build shared package
        run: |
          npm ci --ignore-scripts
          npm run build --workspace=@ats/shared-transformations

      - name: npm install, build, and prepare deployment
        working-directory: ./packages/backend
        run: |
          npm ci --ignore-scripts
          
          # Generate Prisma client
          npx prisma generate
          
          # Build TypeScript with production config
          npx tsc -p tsconfig.prod.json
          
          # Copy necessary files to deployment directory
          mkdir -p deploy
          cp -r dist/* deploy/
          cp -r src/generated deploy/
          cp package.json deploy/
          cp -r prisma deploy/

          # -------------------------------------------------------------------
          # Copy compiled shared-transformations workspace into node_modules so
          # runtime "require('@ats/shared-transformations')" resolves without
          # needing a postinstall step on Azure.
          # -------------------------------------------------------------------
          mkdir -p deploy/node_modules/@ats
          cp -r ../shared/dist deploy/node_modules/@ats/shared-transformations
          cp ../shared/package.json deploy/node_modules/@ats/shared-transformations/package.json
          
          # Update package.json start script to point to correct location
          cd deploy
          node -e "
            const fs = require('fs');
            const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
            pkg.scripts.start = 'node server.js';
            fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
          "
          
          # Install production dependencies in deploy folder
          npm install --omit=dev --ignore-scripts
          
          # Generate Prisma client in deploy folder
          npx prisma generate
          
          # Remove package-lock.json if it was created (not needed for runtime)
          rm -f package-lock.json

      - name: Zip artifact for deployment
        run: |
          cd packages/backend/deploy
          zip -r ../../../deploy.zip .

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: deploy.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip deploy.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_A228BD82482B46E4BF47BB41B32528F9 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_3FB316A6408240F5B79F326BBB00DCDD }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_F12703DB9BE043F8988F14043FFDDF35 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'assetorbit-api'
          slot-name: 'Production'
          package: .
          clean: true 